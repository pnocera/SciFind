# ============================================================================
# SciFIND Backend - Docker Compose Configuration
# Local development environment with all dependencies
# Based on Phase 3 architecture specifications
# ============================================================================

version: '3.8'

services:
  # ========================================
  # SciFIND Backend Application
  # ========================================
  scifind-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder  # Use builder stage for development
    container_name: scifind-backend
    restart: unless-stopped
    ports:
      - "8080:8080"     # API server
      - "9090:9090"     # Metrics endpoint
    environment:
      - SCIFIND_SERVER_MODE=debug
      - SCIFIND_DATABASE_TYPE=postgres
      - SCIFIND_DATABASE_POSTGRESQL_DSN=postgres://scifind:scifind@postgres:5432/scifind?sslmode=disable
      - SCIFIND_NATS_URL=nats://nats:4222
      - SCIFIND_LOGGING_LEVEL=debug
      - SCIFIND_LOGGING_FORMAT=json
      - SCIFIND_PROVIDERS_ARXIV_ENABLED=true
      - SCIFIND_PROVIDERS_SEMANTIC_SCHOLAR_ENABLED=true
    depends_on:
      postgres:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - scifind-network
    volumes:
      - ./configs:/app/configs:ro
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "/app/scifind-server", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ========================================
  # PostgreSQL Database
  # ========================================
  postgres:
    image: postgres:15-alpine
    container_name: scifind-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: scifind
      POSTGRES_USER: scifind
      POSTGRES_PASSWORD: scifind
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/postgres:/docker-entrypoint-initdb.d
    networks:
      - scifind-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scifind -d scifind"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # NATS.io Message Broker
  # ========================================
  nats:
    image: nats:2.11.6-alpine
    container_name: scifind-nats
    restart: unless-stopped
    command: >
      --jetstream
      --store_dir=/data
      --max_memory_store=1GB
      --max_file_store=10GB
      --cluster_name=scifind-cluster
      --server_name=nats-server-1
      --http_port=8222
    ports:
      - "4222:4222"     # NATS client port
      - "8222:8222"     # NATS monitoring port
      - "6222:6222"     # NATS cluster port
    volumes:
      - nats_data:/data
    networks:
      - scifind-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8222/healthz"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ========================================
  # Prometheus (Optional - for monitoring)
  # ========================================
  prometheus:
    image: prom/prometheus:latest
    container_name: scifind-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - scifind-network
    depends_on:
      - scifind-backend

  # ========================================
  # Grafana (Optional - for visualization)
  # ========================================
  grafana:
    image: grafana/grafana:latest
    container_name: scifind-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana:/etc/grafana/provisioning
    networks:
      - scifind-network
    depends_on:
      - prometheus

# ========================================
# Networks
# ========================================
networks:
  scifind-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# ========================================
# Persistent Volumes
# ========================================
volumes:
  postgres_data:
    driver: local
  nats_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
